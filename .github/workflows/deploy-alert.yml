name: Build and push alert function to ECR and Lambda
on:
    release:
      types: [ released ]
    workflow_dispatch:
  
jobs:
    deploy:
        name: Build Docker and Deploy Lambda
        runs-on: ubuntu-latest
        steps:
        - name: get latest release with tag
          id: latestrelease
          run: |
            echo "::set-output name=releasetag::$(curl -s https://api.github.com/repos/dag-hammarskjold-library/dlx-dl/releases/latest | jq '.tag_name' | sed 's/\"//g')"

        - name: confirm release tag
          run: |
            echo ${{ steps.latestrelease.outputs.releasetag }}
            
        - name: Checkout
          uses: actions/checkout@v3
          with:
            ref: ${{ steps.latestrelease.outputs.releasetag }}

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with: 
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build, tag, and push the image to ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: dlx-dl-alert
            IMAGE_TAG: latest
          run: |
            cd ./dlx-dl-alert
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            echo "Pushing image to ECR..."
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

        - name: Deploy image to Lambda
          id: deploy-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: dlx-dl-alert
            IMAGE_TAG: latest
          run: |
            aws lambda update-function-code \
            --function-name dlx-dl-alert \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

        - name: Update EventBridge Rules
          id: update-rules
          run: |
            aws events put-rule \
            --name dlx-dl-alert-run \
            --schedule-expression "rate(30 minutes)"
            
            aws events put-targets \
            --rule dlx-dl-alert-run \
            --targets '[{"Id":"1","Arn":"arn:aws:lambda:us-east-1:950236537949:function:dlx-dl-alert","Input":"{\"source\":\"dlx-dl-alert\"}"}]'
